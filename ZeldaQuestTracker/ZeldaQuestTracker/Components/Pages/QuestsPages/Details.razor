@page "/quests/details"
@inject ZeldaQuestTracker.Data.ZeldaQuestTrackerContext DB
@using ZeldaQuestTracker.Components.Model
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Quests</h4>
    <hr />
    @if (quests is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@quests.Name</dd>
            <dt class="col-sm-2">Walkthrough URL</dt>
            <dd class="col-sm-10"><a href="@quests.Walkthrough">@quests.Walkthrough</a></dd>
            <dt class="col-sm-2">Youtube URL</dt>
            <dd class="col-sm-10"><a href="@quests.Video">@quests.Video</a></dd>
        </dl>
        <div>
            <a href="@($"/quests/edit?id={quests.Id}")">Edit</a> |
            <a href="@($"/quests")">Back to List</a>
        </div>
    }
</div>

@code {
    Quests? quests;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        quests = await DB.Quests.FirstOrDefaultAsync(m => m.Id == Id);

        if (quests is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
